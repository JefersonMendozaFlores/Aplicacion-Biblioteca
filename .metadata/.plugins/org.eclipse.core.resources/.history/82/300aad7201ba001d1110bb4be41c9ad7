package model;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import entidad.Alumno;
import util.MySqlDBConexion;

public class AlumnoModel {
	
	private static Logger Log = Logger.getLogger(AlumnoModel.class.getName());

	//LISTA TODOS
	public List<Alumno> listaTodos(){
		ArrayList<Alumno> salida = new ArrayList<Alumno>();

		Connection conn = null;
		PreparedStatement psmt = null;
		ResultSet rs = null;
		try {
			//1 Se crea la conexion
			conn = MySqlDBConexion.getConexion();

			//2 Se prepara el SQL
			String sql = "select * from alumno";
			psmt = conn.prepareStatement(sql);
			
			Log.info(">>> " + psmt);
			
			//3 Se ejecuta el SQL en la base de datos
			rs = psmt.executeQuery();
			Alumno obj = null;
			while(rs.next()) {
				obj = new Alumno();
				obj.setID(rs.getInt(1));
				obj.setNombres(rs.getString(2));
				obj.setApellidos(rs.getString(3));
				obj.setDNI(rs.getString(4));
				obj.setPais(rs.getString(5));
				obj.setCorreo(rs.getString(6));
				obj.setFec_Nac(rs.getDate(7));
				obj.setFec_Reg(rs.getDate(8));
				salida.add(obj);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (rs != null) rs.close();
				if (psmt != null) psmt.close();
				if (conn != null) conn.close();
			} catch (Exception e2) {}
		}
		return salida;
	}
	
	//LISTAR AUTOR POR NOMBRE O APELLIDO
	public List<Alumno> ConsultaPorNombreApellido(String nombre, String apellido){
		ArrayList<Alumno> data = new ArrayList<Alumno>();
		
		Connection conn = null;
		PreparedStatement psmt = null;
		ResultSet rs = null;
		try {
			//1 Se crea la conexion
			conn = MySqlDBConexion.getConexion();
			
			//2 Se prepara el SQL
			String sql = "select * from alumno "
					+"where (nombres like ?) "
					+"and (apellidos like ?)";
			
			psmt = conn.prepareStatement(sql);
			psmt.setString(1, "%" + nombre + "%");
			psmt.setString(2, "%" + apellido + "%");
			
			System.out.println("SQL --> " + psmt);
			
			//3 Se ejecuta el SQL en la base de datos
			rs = psmt.executeQuery();
			
			//
			Alumno obj = null;
			while(rs.next()){
				obj = new Alumno();
				obj.setID(rs.getInt("idAlumno"));
				obj.setNombres(rs.getString("nombres"));
				obj.setApellidos(rs.getString("apellidos"));
				obj.setDNI(rs.getString("dni"));
				obj.setPais(rs.getString("pais"));
				obj.setCorreo(rs.getString("correo"));
				obj.setFec_Nac(rs.getDate("fechaNacimiento"));
				obj.setFec_Reg(rs.getDate("fechaRegistro"));
				data.add(obj);
			}
			
		    } catch (Exception e) {
			e.printStackTrace();
		    } finally {
			try {
				if (rs != null) rs.close();
				if (psmt != null) psmt.close();
				if (conn != null) conn.close();
			    } catch (Exception e2) {}
		    }
		    return data;
	}
	
	//INSERTAR ALUMNO
	public int insertaAlumno(Alumno obj) {
			int salida = -1;
			Connection conn = null;
			PreparedStatement pstm = null;
			
			try {
				conn = MySqlDBConexion.getConexion();
				
				String sql = "insert into alumno value(null,?,?,?,?,?,?,curtime())";
				pstm = conn.prepareStatement(sql);
				pstm.setString(1, obj.getNombres());
				pstm.setString(2, obj.getApellidos());
				pstm.setString(3, obj.getDNI());
				pstm.setString(4, obj.getPais());
				pstm.setString(5, obj.getCorreo());
				pstm.setDate(6, (Date) obj.getFec_Nac());
				Log.info(">>> "+ pstm);
					
				salida = pstm.executeUpdate();
						
			} catch (Exception e) {
				e.printStackTrace();
			}finally {
				try {
					if(pstm !=null) pstm.close();
					if(conn !=null) conn.close();
					
				} catch (Exception e2) {
					// TODO: handle exception
				}				
			}	
			return salida;
		}	
	
	//ACTUALIZAR ALUMNO
	public int actualizaAlumno(Alumno obj) {
		int actualizados = -1;
		Connection conn = null;
		PreparedStatement pstm = null;
		
		try {
			conn = MySqlDBConexion.getConexion();
			
			String sql = "update alumno set nombres=?, apellidos=?, dni=?, pais=?, correo=?, fechaNacimiento=? where idAlumno=?";
			pstm = conn.prepareStatement(sql);
			pstm.setString(1, obj.getNombres());
			pstm.setString(2, obj.getApellidos());
			pstm.setString(3, obj.getDNI());
			pstm.setString(4, obj.getPais());
			pstm.setString(5, obj.getCorreo());
			pstm.setDate(6, (Date) obj.getFec_Nac());
			pstm.setInt(7, obj.getID());
			
			Log.info(">>> "+ pstm);
			
			actualizados = pstm.executeUpdate();
				
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if(pstm !=null) pstm.close();
				if(conn !=null) conn.close();
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}	
		return actualizados;
	}

	//ELIMINAR
	public int eliminaAlumno(int ID) {
		int eliminados = -1;
		Connection con = null;
		PreparedStatement pstm = null;
		
		try {
			con = MySqlDBConexion.getConexion();
	
			String sql ="delete from alumno where idAlumno=?";
			pstm = con.prepareStatement(sql);
			pstm.setInt(1, ID);
			Log.info(">>> "+ pstm);
			
			eliminados = pstm.executeUpdate();
				
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if (pstm != null)pstm.close();
				if (con != null)con.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}	
		return eliminados;
	}
	
	// REPORTE AUTOR POR NOMBRE O APELLIDO
		public List<Alumno> ReporteAlumno(String nombre, String apellido){
			ArrayList<Alumno> data = new ArrayList<Alumno>();
			
			Connection conn = null;
			PreparedStatement psmt = null;
			ResultSet rs = null;
			try {
				//1 Se crea la conexion
				conn = MySqlDBConexion.getConexion();
				
				//2 Se prepara el SQL
				String sql = "select idAlumno,nombres,apellidos,dni,pais,correo from alumno "
						+"where (nombres like ?) "
						+"and (apellidos like ?)";
				
				psmt = conn.prepareStatement(sql);
				psmt.setString(1, "%" + nombre + "%");
				psmt.setString(2, "%" + apellido + "%");
				
				System.out.println("SQL --> " + psmt);
				
				//3 Se ejecuta el SQL en la base de datos
				rs = psmt.executeQuery();
				
				//
				Alumno obj = null;
				while(rs.next()){
					obj = new Alumno();
					obj.setID(rs.getInt("idAlumno"));
					obj.setNombres(rs.getString("nombres"));
					obj.setApellidos(rs.getString("apellidos"));
					obj.setDNI(rs.getString("dni"));
					obj.setPais(rs.getString("pais"));
					obj.setCorreo(rs.getString("correo"));
					data.add(obj);
				}
				
			    } catch (Exception e) {
				e.printStackTrace();
			    } finally {
				try {
					if (rs != null) rs.close();
					if (psmt != null) psmt.close();
					if (conn != null) conn.close();
				    } catch (Exception e2) {}
			    }
			    return data;
		}
}
